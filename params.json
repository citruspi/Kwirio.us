{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A hash-cracking, nutella-eating beast.","body":"# What is Kwirio.us?\r\nTo put it simply, Kwirio.us is a PHP script which accepts MD5 hashes and then attempts to find the \"clear text\" from which the hash was derived. Kwirio.us is special because it doesn't:\r\n\r\n* use recursive algorithm to brute force the hash\r\n* use a large database which requires 5MB to 50PB of space\r\n* use a word list and attempt a dictionary crack\r\n\r\nInstead, it uses the Internet[1] as a database - it acts as a meta search engine and searches through multiple other sites (including Google) for the hash. In this way, it acts as an interface between your application and other services so that you don't have to implement them yourself.\r\n\r\n[1] It comes with a few services implemented. Additional services can be easily implemented by adding as few as six lines of PHP code.\r\n\r\n# Installation\r\n\r\nInstallation of Kwirio.us is quick and painless. In fact, there isn't an installation, per se. Just download, extract, and load!\r\n\r\nTo get started, just use the command below:\r\n\r\n```\r\n$ git clone git@github.com:TheRealMihir/Kwirio.us.git\r\n```\r\n\r\n# Sample Code\r\n\r\n##Usage\r\n\r\nKwirio.us is easy to implement and can be implemented in a little as seven lines of code. There are only three methods which you must call in order to create a working application: \r\n\r\n* `sethash()`\r\n* `validate()`\r\n* `crack()`\r\n\r\nLet's make a basic application right now. Check it out:\r\n\r\n```php\r\n<?php\r\n    include('Kwirio.php');\r\n        \r\n    $Kwirious = new Kwirio();\r\n        \r\n    $Kwirious->setHash('b45cffe084dd3d20d928bee85e7b0f21');       \r\n        \r\n    if($Kwirious->validate())\r\n        echo $Kwirious->crack();\r\n    else\r\n        echo \"Please set a valid hash.\"; \r\n?>\r\n```\r\n\r\nThis would print out:\r\n\r\n```\r\nstring\r\n```\r\n\r\nEasy, right?\r\n\r\n\r\n## Making an API Service\r\n\r\nBut, wait. What if you want to use Kwirio.us as an API? Still pretty easy to do:\r\n\r\n```php\r\n<?php\r\n  header('content-type: application/json; charset=utf-8');\r\n                \r\n  include('Kwirious/Kwirio.php');\r\n                \r\n  $Kwirious = new Kwirio();\r\n                \r\n  $Kwirious->setHash($_GET['h']);   \r\n                \r\n  $data = array();    \r\n                \r\n  if($Kwirious->validate()){\r\n    $rslt = $Kwirious->crack();\r\n                \r\n    if($rslt == \"Hash not cracked! :(\")\r\n      $data = array(\"hash\" => $_GET['h'], \"valid\" => TRUE, \"found\" => FALSE, \"result\" => \"\"); \r\n    else\r\n      $data = array(\"hash\" => $_GET['h'], \"valid\" => TRUE, \"found\" => TRUE, \"result\" => $rslt);         \r\n  }\r\n                \r\n  else\r\n    $data = array(\"hash\" => $_GET['h'], \"valid\" => FALSE, \"found\" => FALSE, \"result\" => \"\");  \r\n                \r\n  $pattern = array(',\"', '{', '}');\r\n  $replacement = array(\",\\n\\t\\\"\", \"{\\n\\t\", \"\\n}\");\r\n  $rspn = str_replace($pattern, $replacement, json_encode($data));\r\n                \r\n  echo $rspn;     \r\n?>\r\n```\r\n\r\nSo now, if the URL\r\n\r\n```\r\nhttp://domain.com/API.php?h=b45cffe084dd3d20d928bee85e7b0f21\r\n```\r\n\r\nis called, it prints out a JSON response like:\r\n\r\n```json\r\n{\r\n  \"hash\":\"b45cffe084dd3d20d928bee85e7b0f21\",\r\n  \"valid\":true,\r\n  \"found\":true,\r\n  \"result\":\"string\"\r\n}\r\n```\r\n\r\nAnd, ta da! You have your own API for crackin' hashes.\r\n\r\n# Services\r\n\r\nThe services which are implemented in Kwirio.us as of this point are:\r\n\r\n|Service Name|Version Implemented|\r\n|:-----------|:-----------------:|\r\n|collision | v0.1 |\r\n|noisette | v0.1 |\r\n|rednoize | v0.1 |\r\n|ramsey | v0.1 |\r\n|darkbyte | v0.1 |\r\n|md5-hash | v0.1 |\r\n|google | v0.1  |\r\n|gromweb | v0.1 |\r\n\r\n# License\r\n\r\nKwirio.us is licensed under a WTFPL - do what the fuck you want to do. The terms are as follows:\r\n\r\n```\r\n         DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\r\n                    Version 2, December 2004\r\n\r\n Copyright (C) 2012 The Royal Panda Company <mihir@royalpanda.co>\r\n\r\n Everyone is permitted to copy and distribute verbatim or modified\r\n copies of this license document, and changing it is allowed as long\r\n as the name is changed.\r\n\r\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. You just DO WHAT THE FUCK YOU WANT TO.\r\n```\r\n\r\n# Credits\r\n\r\n* [TheRealMihir](https://github.com/TheRealMihir) started and maintains the project.\r\n* The Ruby script [BozoCrack](https://github.com/juuso/BozoCrack) inspired the project.\r\n\r\n# Contribute\r\n\r\nWant to contribute? We'd love to have your input.","name":"Kwirio.us"}